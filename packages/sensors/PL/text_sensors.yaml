# Hartmann Heat Pump - Text Sensor Components (Polish)
# Pompa Ciepła Hartmann - Komponenty Text Sensor

text_sensor:
  - platform: version
    name: "Wersja ESPHome"
  
  - platform: wifi_info
    ip_address:
      name: "Adres IP"
    ssid:
      name: "Połączona sieć WiFi"

  # Status pompy ciepła
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "Tryb pracy"
    id: work_mode
    register_type: holding
    address: 40216  # Odczyt aktualnego trybu pracy
    raw_encode: HEXBYTES
    lambda: |-
      uint16_t value = modbus_controller::word_from_hex_str(x, 0);
      switch (value) {
        case 0: return std::string("Chłodzenie");
        case 1: return std::string("Ogrzewanie");
        case 2: return std::string("CWU");
        case 3: return std::string("Chłodzenie + CWU");
        case 4: return std::string("Ogrzewanie + CWU");
        default: return std::string("Nieznany");
      }

  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "Status systemu"
    id: system_status_text
    register_type: holding
    address: 40218  # Status systemu
    raw_encode: HEXBYTES
    lambda: |-
      uint16_t value = modbus_controller::word_from_hex_str(x, 0);
      switch (value) {
        case 0: return std::string("Gotowość");
        case 1: return std::string("Praca");
        case 2: return std::string("Stop - Alarm");
        case 3: return std::string("Stop - Timer");
        case 4: return std::string("Stop - Obsługa");
        case 5: return std::string("Stop - Awaryjny");
        case 6: return std::string("Stop - Przycisk");
        case 7: return std::string("Tryb ręczny");
        case 8: return std::string("Antyzamarzanie");
        case 9: return std::string("Stop - Łączenie AC");
        case 10: return std::string("Zmiana trybu");
        default: return std::string("Nieznany");
      }